N = 8  # Board size

def print_solution(board):
    for row in board:
        print(" ".join("Q" if cell else "_" for cell in row))
    print()

def is_safe(board, row, col):
    for i in range(row):
        if board[i][col] or (col - (row - i) >= 0 and board[i][col - (row - i)]) or (col + (row - i) < N and board[i][col + (row - i)]):
            return False
    return True

def solve_n_queen(board, row=0):
    if row == N:
        print_solution(board)
        return True
    found = False
    for col in range(N):
        if is_safe(board, row, col):
            board[row][col] = True
            found = solve_n_queen(board, row + 1) or found
            board[row][col] = False
    return found

def n_queen():
    board = [[False] * N for _ in range(N)]
    solve_n_queen(board)

# Run the function to get solutions
n_queen()
